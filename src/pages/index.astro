---
import Page from "@layouts/Page.astro";
import { data, latestVersion, supportsLatestVersion } from "../data";
---
<Page title="Awesome Minestom">
    <Fragment slot="meta">
        <meta name="theme-color" content="#FF6C32" />
        <meta property="og:title" content="minestom.rocks" />
        <meta property="og:description" content="A collection of awesome Minestom resources." />
    </Fragment>

    <div id="header">
        <label>
            <input type="checkbox" id="filter-latest" />
            Show {latestVersion} projects only
        </label>
    </div>

    {data.map((category, index) => (
        <section data-category-index={index}>
            <h2>{category.title}</h2>
            <ul>
                {category.items.map((item, itemIndex) => (
                    <li
                        data-item-index={itemIndex}
                        data-supports-latest={supportsLatestVersion(item)}
                    >
                        <a href={item.link} target="_blank" rel="noopener noreferrer">
                            {item.name}
                        </a> - {item.description} {item.version ? <span style="color: #777777">({item.version})</span> : <Fragment />}
                    </li>
                ))}
            </ul>
        </section>
    ))}

    <p id="footer">Made by <a href="https://mudkip.dev">mudkip</a>, star it on <a href="https://github.com/mudkipdev/minestom.rocks">GitHub.</a></p>
</Page>

<script>
    const checkbox = document.querySelector("#filter-latest") as HTMLInputElement;
    const sections = document.querySelectorAll("section");

    checkbox.addEventListener("change", () => {
        sections.forEach(section => {
            const items = section.querySelectorAll("li");
            let visibleCount = 0;

            items.forEach(item => {
                const supported = item.getAttribute("data-supports-latest") === "true";
                item.style.display = (!checkbox.checked || supported) ? "" : "none";
                if (!checkbox.checked || supported) visibleCount++;
            });

            section.style.display = visibleCount > 0 ? "" : "none";
        });
    });
</script>

<script>
    document.addEventListener("DOMContentLoaded", () => {
        if (Math.random() >= 0.01) {
            return;
        }

        document.title = document.title.replace("Minestom", "Minestorm");
        document.querySelectorAll("li").forEach(replaceTextInNode);

        function replaceTextInNode(node: Node) {
            if (node.nodeType === Node.TEXT_NODE && node.textContent != null) {
                node.textContent = node.textContent
                    .replace("Minestom", "Minestorm")
                    .replace("minestom", "minestorm");
            } else if (node.nodeType === Node.ELEMENT_NODE) {
                node.childNodes.forEach(replaceTextInNode);
            }
        }
    });
</script>
